{"ast":null,"code":"import _classCallCheck from \"C:\\\\Mi\\\\Programavimas\\\\Projects\\\\React\\\\rest-api-fetch\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Mi\\\\Programavimas\\\\Projects\\\\React\\\\rest-api-fetch\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Mi\\\\Programavimas\\\\Projects\\\\React\\\\rest-api-fetch\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Mi\\\\Programavimas\\\\Projects\\\\React\\\\rest-api-fetch\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Mi\\\\Programavimas\\\\Projects\\\\React\\\\rest-api-fetch\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Mi\\\\Programavimas\\\\Projects\\\\React\\\\rest-api-fetch\\\\client\\\\src\\\\App.js\";\n// import React, { Component } from \"react\";\n// import \"./App.css\";\n// import logo from './logo.jpg';\n// class App extends Component {\n//   state = {\n//     response: \"\",\n//     post: \"\",\n//     responseToPost: \"\"\n//   };\n//   // componentDidMount() {\n//   //   this.callApi()\n//   //     .then(res => this.setState({ response: res.express }))\n//   //     .catch(err => console.log(err));\n//   // }\n//   // callApi = async () => {\n//   //   const response = await fetch(\"/api/get\");\n//   //   const body = await response.json();\n//   //   if (response.status !== 200) throw Error(body.message);\n//   //   return body;\n//   // };\n//   componentDidMount() {\n//     this.callApi()\n//       .then(res => this.setState({ response: res.express }))\n//       .catch(err => console.log(err));\n//   }\n//   callApi = async () => {\n//     const response = await fetch(\"/api/get\");\n//     const body = await response.json();\n//     if (response.status !== 200) throw Error(body.message);\n//     return body;\n//   };\n//   handleSubmit = async e => {\n//     e.preventDefault();\n//     const response = await fetch(\"/api/post\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\"\n//       },\n//       body: JSON.stringify({ post: this.state.post })\n//     });\n//     const body = await response.text();\n//     this.setState({ responseToPost: body });\n//   };\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <div className=\"container\">\n//         <p className=\"text\">Dabar per <img src={logo} alt=\"Logo\" /> rodome:</p>\n//           <p>{this.state.response}</p>\n//           <form onSubmit={this.handleSubmit}>\n//             <p>\n//               <strong>Post to Server:</strong>\n//             </p>\n//             <div className=\"input-group mb-3\">\n//               <input\n//                 type=\"text\"\n//                 className=\"form-control\"\n//                 aria-describedby=\"button-addon\"\n//                 value={this.state.post}\n//                 onChange={e => this.setState({ post: e.target.value })}\n//               />\n//               <div className=\"input-group-append\">\n//                 <button className=\"btn btn-primary\" type=\"submit\" id=\"button-addon\">\n//                   Submit\n//                 </button>\n//               </div>\n//             </div>\n//           </form>\n//           <p>{this.state.responseToPost}</p>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// export default App;\nimport React, { Component } from 'react'; //import logo from './logo.svg';\n\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.state = {\n      users: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('https://www.lrt.lt/static/tvprog/tvprog.json').then(function (res) {\n        console.log(res);\n        return res.json();\n      }).then(function (users) {\n        console.log(users);\n\n        _this2.setState({\n          users: users\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Users\"), this.state.users.map(function (user) {\n        return React.createElement(\"div\", {\n          key: user.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, \"user: \", user.name, \" Password: \", user.password);\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Mi\\Programavimas\\Projects\\React\\rest-api-fetch\\client\\src\\App.js"],"names":["React","Component","App","state","users","fetch","then","res","console","log","json","setState","map","user","id","name","password"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAO,WAAP;;IACMC,G;;;;;AACH,iBAAa;AAAA;;AAAA;;AACT;AACA,UAAKC,KAAL,GAAY;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAZ;AAFS;AAGZ;;;;wCACmB;AAAA;;AACbC,MAAAA,KAAK,CAAC,8CAAD,CAAL,CACGC,IADH,CACQ,UAAAC,GAAG,EAAI;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,eAAOA,GAAG,CAACG,IAAJ,EAAP;AACF,OAJJ,EAKGJ,IALH,CAKQ,UAAAF,KAAK,EAAI;AACXI,QAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;;AACA,QAAA,MAAI,CAACO,QAAL,CAAc;AAAEP,UAAAA,KAAK,EAALA;AAAF,SAAd;AACF,OARJ;AASA;;;6BACE;AACJ,aACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEK,KAAKD,KAAL,CAAWC,KAAX,CAAiBQ,GAAjB,CAAqB,UAAAC,IAAI;AAAA,eAC1B;AAAK,UAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA0BD,IAAI,CAACE,IAA/B,iBAAgDF,IAAI,CAACG,QAArD,CAD0B;AAAA,OAAzB,CAFL,CADJ;AAQH;;;;EAzBaf,S;;AA2BlB,eAAeC,GAAf","sourcesContent":["// import React, { Component } from \"react\";\n// import \"./App.css\";\n// import logo from './logo.jpg';\n// class App extends Component {\n//   state = {\n//     response: \"\",\n//     post: \"\",\n//     responseToPost: \"\"\n//   };\n//   // componentDidMount() {\n//   //   this.callApi()\n//   //     .then(res => this.setState({ response: res.express }))\n//   //     .catch(err => console.log(err));\n//   // }\n//   // callApi = async () => {\n//   //   const response = await fetch(\"/api/get\");\n//   //   const body = await response.json();\n//   //   if (response.status !== 200) throw Error(body.message);\n//   //   return body;\n//   // };\n//   componentDidMount() {\n//     this.callApi()\n//       .then(res => this.setState({ response: res.express }))\n//       .catch(err => console.log(err));\n//   }\n//   callApi = async () => {\n//     const response = await fetch(\"/api/get\");\n//     const body = await response.json();\n//     if (response.status !== 200) throw Error(body.message);\n//     return body;\n//   };\n//   handleSubmit = async e => {\n//     e.preventDefault();\n//     const response = await fetch(\"/api/post\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\"\n//       },\n//       body: JSON.stringify({ post: this.state.post })\n//     });\n//     const body = await response.text();\n//     this.setState({ responseToPost: body });\n//   };\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <div className=\"container\">\n//         <p className=\"text\">Dabar per <img src={logo} alt=\"Logo\" /> rodome:</p>\n//           <p>{this.state.response}</p>\n//           <form onSubmit={this.handleSubmit}>\n//             <p>\n//               <strong>Post to Server:</strong>\n//             </p>\n\n//             <div className=\"input-group mb-3\">\n//               <input\n//                 type=\"text\"\n//                 className=\"form-control\"\n//                 aria-describedby=\"button-addon\"\n//                 value={this.state.post}\n//                 onChange={e => this.setState({ post: e.target.value })}\n//               />\n//               <div className=\"input-group-append\">\n//                 <button className=\"btn btn-primary\" type=\"submit\" id=\"button-addon\">\n//                   Submit\n//                 </button>\n//               </div>\n//             </div>\n//           </form>\n//           <p>{this.state.responseToPost}</p>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// export default App;\n\nimport React, { Component } from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nclass App extends Component {\n   constructor(){\n       super();\n       this.state ={users: []};\n   }\n   componentDidMount() {\n          fetch('https://www.lrt.lt/static/tvprog/tvprog.json', )\n            .then(res => {\n                console.log(res);\n                return res.json()\n             })\n            .then(users => { \n                console.log(users); \n                this.setState({ users })\n             });\n         }\n   render() {\n        return (\n            <div className=\"App\">\n                <h1>Users</h1>\n                {this.state.users.map(user =>\n                <div key={user.id}>user: {user.name} Password: {user.password}</div>\n              )}\n            </div>\n        );\n    }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}