{"ast":null,"code":"import _classCallCheck from \"C:\\\\Mi\\\\Programavimas\\\\Projects\\\\React\\\\rest-api-fetch\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Mi\\\\Programavimas\\\\Projects\\\\React\\\\rest-api-fetch\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Mi\\\\Programavimas\\\\Projects\\\\React\\\\rest-api-fetch\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Mi\\\\Programavimas\\\\Projects\\\\React\\\\rest-api-fetch\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Mi\\\\Programavimas\\\\Projects\\\\React\\\\rest-api-fetch\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Mi\\\\Programavimas\\\\Projects\\\\React\\\\rest-api-fetch\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport logo from \"./logo.jpg\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      response: \"\",\n      post: \"\",\n      responseToPost: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    // componentDidMount() {\n    //   this.callApi()\n    //     .then(res => this.setState({ response: res.express }))\n    //     .catch(err => console.log(err));\n    // }\n    // callApi = async () => {\n    //   const response = await fetch(\"/api/get\");\n    //   const body = await response.json();\n    //   if (response.status !== 200) throw Error(body.message);\n    //   return body;\n    // };\n    // handleSubmit = async e => {\n    //   e.preventDefault();\n    //   const response = await fetch(\"/api/post\", {\n    //     method: \"POST\",\n    //     headers: {\n    //       \"Content-Type\": \"application/json\"\n    //     },\n    //     body: JSON.stringify({ post: this.state.post })\n    //   });\n    //   const body = await response.text();\n    //   this.setState({ responseToPost: body });\n    // };\n    // render() {\n    //   return (\n    //     <div className=\"App\">\n    //       <div className=\"container\">\n    //       <p className=\"text\">Dabar per <img src={logo} alt=\"Logo\" /> rodome:</p>\n    //         <p>{this.state.response}</p>\n    //         <form onSubmit={this.handleSubmit}>\n    //           <p>\n    //             <strong>Post to Server:</strong>\n    //           </p>\n    //           <div className=\"input-group mb-3\">\n    //             <input\n    //               type=\"text\"\n    //               className=\"form-control\"\n    //               aria-describedby=\"button-addon\"\n    //               value={this.state.post}\n    //               onChange={e => this.setState({ post: e.target.value })}\n    //             />\n    //             <div className=\"input-group-append\">\n    //               <button className=\"btn btn-primary\" type=\"submit\" id=\"button-addon\">\n    //                 Submit\n    //               </button>\n    //             </div>\n    //           </div>\n    //         </form>\n    //         <p>{this.state.responseToPost}</p>\n    //       </div>\n    //     </div>\n    //   );\n    // }\n    value: function componentDidMount() {\n      // fetch data from www.lrt.lt json file\n      fetch(\"https://www.lrt.lt/static/tvprog/tvprog.json\").then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        var liveShow = json.tvprog.items[0].title;\n        var liveShowDesc = json.tvprog.items[0].desc;\n        var liveShowStart = json.tvprog.items[0].start;\n        var liveShowStop = json.tvprog.items[0].stop;\n        console.log(liveShow);\n        console.log(liveShowDesc);\n        console.log(liveShowStart);\n        console.log(liveShowStop);\n      }).catch(function (err) {\n        console.error(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Users\"), this.state.users.map(function (user) {\n        return React.createElement(\"div\", {\n          key: user.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, \"user: \", user.name, \" Password: \", user.password);\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Mi\\Programavimas\\Projects\\React\\rest-api-fetch\\client\\src\\App.js"],"names":["React","Component","logo","App","state","response","post","responseToPost","fetch","then","res","json","liveShow","tvprog","items","title","liveShowDesc","desc","liveShowStart","start","liveShowStop","stop","console","log","catch","err","error","users","map","user","id","name","password"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;;IACMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,IAAI,EAAE,EAFA;AAGNC,MAAAA,cAAc,EAAE;AAHV,K;;;;;;AAKR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;wCAEoB;AAClB;AACAC,MAAAA,KAAK,gDAAL,CACGC,IADH,CACQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADX,EAEGF,IAFH,CAEQ,UAAAE,IAAI,EAAI;AACZ,YAAIC,QAAQ,GAAGD,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBC,KAApC;AACA,YAAIC,YAAY,GAAGL,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBG,IAAxC;AACA,YAAIC,aAAa,GAAGP,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBK,KAAzC;AACA,YAAIC,YAAY,GAAGT,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBO,IAAxC;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYX,QAAZ;AACAU,QAAAA,OAAO,CAACC,GAAR,CAAYP,YAAZ;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAYL,aAAZ;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;AACD,OAXH,EAYGI,KAZH,CAYS,UAAAC,GAAG,EAAI;AACZH,QAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACD,OAdH;AAeD;;;6BACQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEG,KAAKrB,KAAL,CAAWuB,KAAX,CAAiBC,GAAjB,CAAqB,UAAAC,IAAI;AAAA,eACxB;AAAK,UAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACSD,IAAI,CAACE,IADd,iBAC+BF,IAAI,CAACG,QADpC,CADwB;AAAA,OAAzB,CAFH,CADF;AAUD;;;;EA1Fe/B,S;;AA4FlB,eAAeE,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport logo from \"./logo.jpg\";\nclass App extends Component {\n  state = {\n    response: \"\",\n    post: \"\",\n    responseToPost: \"\"\n  };\n  // componentDidMount() {\n  //   this.callApi()\n  //     .then(res => this.setState({ response: res.express }))\n  //     .catch(err => console.log(err));\n  // }\n  // callApi = async () => {\n  //   const response = await fetch(\"/api/get\");\n  //   const body = await response.json();\n  //   if (response.status !== 200) throw Error(body.message);\n  //   return body;\n  // };\n  // handleSubmit = async e => {\n  //   e.preventDefault();\n  //   const response = await fetch(\"/api/post\", {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\"\n  //     },\n  //     body: JSON.stringify({ post: this.state.post })\n  //   });\n  //   const body = await response.text();\n  //   this.setState({ responseToPost: body });\n  // };\n  // render() {\n  //   return (\n  //     <div className=\"App\">\n  //       <div className=\"container\">\n  //       <p className=\"text\">Dabar per <img src={logo} alt=\"Logo\" /> rodome:</p>\n  //         <p>{this.state.response}</p>\n  //         <form onSubmit={this.handleSubmit}>\n  //           <p>\n  //             <strong>Post to Server:</strong>\n  //           </p>\n\n  //           <div className=\"input-group mb-3\">\n  //             <input\n  //               type=\"text\"\n  //               className=\"form-control\"\n  //               aria-describedby=\"button-addon\"\n  //               value={this.state.post}\n  //               onChange={e => this.setState({ post: e.target.value })}\n  //             />\n  //             <div className=\"input-group-append\">\n  //               <button className=\"btn btn-primary\" type=\"submit\" id=\"button-addon\">\n  //                 Submit\n  //               </button>\n  //             </div>\n  //           </div>\n  //         </form>\n  //         <p>{this.state.responseToPost}</p>\n  //       </div>\n  //     </div>\n  //   );\n  // }\n\n  componentDidMount() {\n    // fetch data from www.lrt.lt json file\n    fetch(`https://www.lrt.lt/static/tvprog/tvprog.json`)\n      .then(res => res.json())\n      .then(json => {\n        let liveShow = json.tvprog.items[0].title;\n        let liveShowDesc = json.tvprog.items[0].desc;\n        let liveShowStart = json.tvprog.items[0].start;\n        let liveShowStop = json.tvprog.items[0].stop;\n        console.log(liveShow);\n        console.log(liveShowDesc);\n        console.log(liveShowStart);\n        console.log(liveShowStop);\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Users</h1>\n        {this.state.users.map(user => (\n          <div key={user.id}>\n            user: {user.name} Password: {user.password}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}