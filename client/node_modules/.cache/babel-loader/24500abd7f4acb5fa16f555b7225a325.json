{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Mi\\\\Programavimas\\\\Projects\\\\React\\\\rest-api-fetch\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Mi\\\\Programavimas\\\\Projects\\\\React\\\\rest-api-fetch\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Mi\\\\Programavimas\\\\Projects\\\\React\\\\rest-api-fetch\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Mi\\\\Programavimas\\\\Projects\\\\React\\\\rest-api-fetch\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Mi\\\\Programavimas\\\\Projects\\\\React\\\\rest-api-fetch\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Mi\\\\Programavimas\\\\Projects\\\\React\\\\rest-api-fetch\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Mi\\\\Programavimas\\\\Projects\\\\React\\\\rest-api-fetch\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Mi\\\\Programavimas\\\\Projects\\\\React\\\\rest-api-fetch\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport logo from './logo.jpg';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      response: \"\",\n      post: \"\",\n      responseToPost: \"\"\n    };\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var response, body;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _context.next = 3;\n                return fetch(\"/api/post\", {\n                  method: \"POST\",\n                  headers: {\n                    \"Content-Type\": \"application/json\"\n                  },\n                  body: JSON.stringify({\n                    post: _this.state.post\n                  })\n                });\n\n              case 3:\n                response = _context.sent;\n                _context.next = 6;\n                return response.text();\n\n              case 6:\n                body = _context.sent;\n\n                _this.setState({\n                  responseToPost: body\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    // componentDidMount() {\n    //   this.callApi()\n    //     .then(res => this.setState({ response: res.express }))\n    //     .catch(err => console.log(err));\n    // }\n    // callApi = async () => {\n    //   const response = await fetch(\"/api/get\");\n    //   const body = await response.json();\n    //   if (response.status !== 200) throw Error(body.message);\n    //   return body;\n    // };\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('https://www.lrt.lt/static/tvprog/tvprog.json').then(function (res) {\n        console.log(res);\n        return res.json();\n      }).then(function (liveShow) {\n        console.log(liveShow);\n\n        _this2.setState({\n          liveShow: liveShow\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"liveShow\"), this.state.users.map(function (user) {\n        return React.createElement(\"div\", {\n          key: user,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, \"user: \", user, \" Password: \", user);\n      })) // <div className=\"App\">\n      //   <div className=\"container\">\n      //   <p className=\"text\">Dabar per <img src={logo} alt=\"Logo\" /> rodome:</p>\n      //     <p>{this.state.response}</p>\n      //     <form onSubmit={this.handleSubmit}>\n      //       <p>\n      //         <strong>Post to Server:</strong>\n      //       </p>\n      //       <div className=\"input-group mb-3\">\n      //         <input\n      //           type=\"text\"\n      //           className=\"form-control\"\n      //           aria-describedby=\"button-addon\"\n      //           value={this.state.post}\n      //           onChange={e => this.setState({ post: e.target.value })}\n      //         />\n      //         <div className=\"input-group-append\">\n      //           <button className=\"btn btn-primary\" type=\"submit\" id=\"button-addon\">\n      //             Submit\n      //           </button>\n      //         </div>\n      //       </div>\n      //     </form>\n      //     <p>{this.state.responseToPost}</p>\n      //   </div>\n      // </div>\n      ;\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Mi\\Programavimas\\Projects\\React\\rest-api-fetch\\client\\src\\App.js"],"names":["React","Component","logo","App","state","response","post","responseToPost","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","text","setState","then","res","console","log","json","liveShow","users","map","user"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;;IACMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,IAAI,EAAE,EAFA;AAGNC,MAAAA,cAAc,EAAE;AAHV,K;;UA4BRC,Y;;;;;+BAAe,iBAAMC,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACbA,gBAAAA,CAAC,CAACC,cAAF;AADa;AAAA,uBAEUC,KAAK,CAAC,WAAD,EAAc;AACxCC,kBAAAA,MAAM,EAAE,MADgC;AAExCC,kBAAAA,OAAO,EAAE;AACP,oCAAgB;AADT,mBAF+B;AAKxCC,kBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEV,oBAAAA,IAAI,EAAE,MAAKF,KAAL,CAAWE;AAAnB,mBAAf;AALkC,iBAAd,CAFf;;AAAA;AAEPD,gBAAAA,QAFO;AAAA;AAAA,uBASMA,QAAQ,CAACY,IAAT,EATN;;AAAA;AASPH,gBAAAA,IATO;;AAUb,sBAAKI,QAAL,CAAc;AAAEX,kBAAAA,cAAc,EAAEO;AAAlB,iBAAd;;AAVa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;AAvBf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;wCACoB;AAAA;;AAClBH,MAAAA,KAAK,CAAC,8CAAD,CAAL,CACGQ,IADH,CACQ,UAAAC,GAAG,EAAI;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,eAAOA,GAAG,CAACG,IAAJ,EAAP;AACF,OAJJ,EAKGJ,IALH,CAKQ,UAAAK,QAAQ,EAAI;AACdH,QAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;;AACA,QAAA,MAAI,CAACN,QAAL,CAAc;AAAEM,UAAAA,QAAQ,EAARA;AAAF,SAAd;AACF,OARJ;AASA;;;6BAcO;AACP,aACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEK,KAAKpB,KAAL,CAAWqB,KAAX,CAAiBC,GAAjB,CAAqB,UAAAC,IAAI;AAAA,eAC1B;AAAK,UAAA,GAAG,EAAEA,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAuBA,IAAvB,iBAAwCA,IAAxC,CAD0B;AAAA,OAAzB,CAFL,CADJ,CAOE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjCF;AAmCD;;;;EA7Ee1B,S;;AA+ElB,eAAeE,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport logo from './logo.jpg';\nclass App extends Component {\n  state = {\n    response: \"\",\n    post: \"\",\n    responseToPost: \"\"\n  };\n  // componentDidMount() {\n  //   this.callApi()\n  //     .then(res => this.setState({ response: res.express }))\n  //     .catch(err => console.log(err));\n  // }\n  // callApi = async () => {\n  //   const response = await fetch(\"/api/get\");\n  //   const body = await response.json();\n  //   if (response.status !== 200) throw Error(body.message);\n  //   return body;\n  // };\n  componentDidMount() {\n    fetch('https://www.lrt.lt/static/tvprog/tvprog.json')\n      .then(res => {\n          console.log(res);\n          return res.json()\n       })\n      .then(liveShow => { \n          console.log(liveShow); \n          this.setState({ liveShow })\n       });\n   }\n\n  handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch(\"/api/post\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({ post: this.state.post })\n    });\n    const body = await response.text();\n    this.setState({ responseToPost: body });\n  };\n  render() {\n    return (\n        <div className=\"App\">\n            <h1>liveShow</h1>\n            {this.state.users.map(user =>\n            <div key={user}>user: {user} Password: {user}</div>\n          )}\n        </div>\n      // <div className=\"App\">\n      //   <div className=\"container\">\n      //   <p className=\"text\">Dabar per <img src={logo} alt=\"Logo\" /> rodome:</p>\n      //     <p>{this.state.response}</p>\n      //     <form onSubmit={this.handleSubmit}>\n      //       <p>\n      //         <strong>Post to Server:</strong>\n      //       </p>\n\n      //       <div className=\"input-group mb-3\">\n      //         <input\n      //           type=\"text\"\n      //           className=\"form-control\"\n      //           aria-describedby=\"button-addon\"\n      //           value={this.state.post}\n      //           onChange={e => this.setState({ post: e.target.value })}\n      //         />\n      //         <div className=\"input-group-append\">\n      //           <button className=\"btn btn-primary\" type=\"submit\" id=\"button-addon\">\n      //             Submit\n      //           </button>\n      //         </div>\n      //       </div>\n      //     </form>\n      //     <p>{this.state.responseToPost}</p>\n      //   </div>\n      // </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}