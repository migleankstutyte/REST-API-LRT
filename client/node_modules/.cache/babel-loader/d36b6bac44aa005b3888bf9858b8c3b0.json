{"ast":null,"code":"import _classCallCheck from \"C:\\\\Mi\\\\Programavimas\\\\Projects\\\\React\\\\rest-api-fetch\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Mi\\\\Programavimas\\\\Projects\\\\React\\\\rest-api-fetch\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Mi\\\\Programavimas\\\\Projects\\\\React\\\\rest-api-fetch\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Mi\\\\Programavimas\\\\Projects\\\\React\\\\rest-api-fetch\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Mi\\\\Programavimas\\\\Projects\\\\React\\\\rest-api-fetch\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Mi\\\\Programavimas\\\\Projects\\\\React\\\\rest-api-fetch\\\\client\\\\src\\\\App.js\";\n// import React, { Component } from \"react\";\n// import \"./App.css\";\n// import logo from \"./logo.jpg\";\n// class App extends Component {\n//   state = {\n//     response: \"\"\n//   };\n//   componentDidMount() {\n//     this.callApi()\n//       .then(res => this.setState({ response: res.express }))\n//       .catch(err => console.log(err));\n//   }\n//   callApi = async () => {\n//     const response = await fetch(`https://www.lrt.lt/static/tvprog/tvprog.json`, { mode: 'no-cors' });\n//     const body = await response.json();\n//     if (response.status !== 200) throw Error(body.message);\n//     return body;\n//   };\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <div className=\"container\">\n//           <p className=\"text\">\n//             Dabar per <img src={logo} alt=\"Logo\" /> rodome:\n//           </p>\n//           <p>{this.state.response}</p>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// export default App;\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport logo from \"./logo.jpg\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      response: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    // componentDidMount() {\n    //   this.callApi()\n    //     .then(res => this.setState({ response: res.express }))\n    //     .catch(err => console.log(err));\n    // }\n    // callApi = async () => {\n    //   const response = await fetch(`https://www.lrt.lt/static/tvprog/tvprog.json`, { mode: 'no-cors' });\n    //   const body = await response.json();\n    //   if (response.status !== 200) throw Error(body.message);\n    //   return body;\n    // };\n    value: function componentDidMount() {\n      fetch(\"https://www.lrt.lt/static/tvprog/tvprog.json\", {\n        mode: 'no-cors'\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        var liveShow = json.tvprog.items[0];\n        var liveShowTitle = liveShow.title;\n        var liveShowDesc = liveShow.desc;\n        var liveShowStart = liveShow.start;\n        var liveShowStop = liveShow.stop;\n        console.log(liveShowTitle);\n        console.log(liveShowDesc);\n        console.log(liveShowStart);\n        console.log(liveShowStop);\n      }).catch(function (err) {\n        console.error(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Dabar per \", React.createElement(\"img\", {\n        src: logo,\n        alt: \"Logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), \" rodome:\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, this.state.response)));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Mi\\Programavimas\\Projects\\React\\rest-api-fetch\\client\\src\\App.js"],"names":["React","Component","logo","App","state","response","fetch","mode","then","res","json","liveShow","tvprog","items","liveShowTitle","title","liveShowDesc","desc","liveShowStart","start","liveShowStop","stop","console","log","catch","err","error"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAuBA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;;IACMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE;AADJ,K;;;;;;AAIR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;wCAEoB;AAClBC,MAAAA,KAAK,CAAC,8CAAD,EAAiD;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAjD,CAAL,CACCC,IADD,CACM,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADT,EAECF,IAFD,CAEM,UAAAE,IAAI,EAAI;AACZ,YAAIC,QAAQ,GAAGD,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,CAAf;AACA,YAAIC,aAAa,GAAGH,QAAQ,CAACI,KAA7B;AACA,YAAIC,YAAY,GAAGL,QAAQ,CAACM,IAA5B;AACA,YAAIC,aAAa,GAAGP,QAAQ,CAACQ,KAA7B;AACA,YAAIC,YAAY,GAAGT,QAAQ,CAACU,IAA5B;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYT,aAAZ;AACAQ,QAAAA,OAAO,CAACC,GAAR,CAAYP,YAAZ;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAYL,aAAZ;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;AACD,OAZD,EAaCI,KAbD,CAaO,UAAAC,GAAG,EAAI;AACZH,QAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACD,OAfD;AAgBD;;;6BASQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACY;AAAK,QAAA,GAAG,EAAEvB,IAAV;AAAgB,QAAA,GAAG,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADZ,aADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKE,KAAL,CAAWC,QAAf,CAJF,CADF,CADF;AAUD;;;;EAtDeJ,S;;AAwDlB,eAAeE,GAAf","sourcesContent":["// import React, { Component } from \"react\";\n// import \"./App.css\";\n// import logo from \"./logo.jpg\";\n// class App extends Component {\n//   state = {\n//     response: \"\"\n//   };\n\n//   componentDidMount() {\n//     this.callApi()\n//       .then(res => this.setState({ response: res.express }))\n//       .catch(err => console.log(err));\n//   }\n//   callApi = async () => {\n//     const response = await fetch(`https://www.lrt.lt/static/tvprog/tvprog.json`, { mode: 'no-cors' });\n//     const body = await response.json();\n//     if (response.status !== 200) throw Error(body.message);\n//     return body;\n//   };\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <div className=\"container\">\n//           <p className=\"text\">\n//             Dabar per <img src={logo} alt=\"Logo\" /> rodome:\n//           </p>\n//           <p>{this.state.response}</p>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// export default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport logo from \"./logo.jpg\";\nclass App extends Component {\n  state = {\n    response: \"\"\n  };\n\n  // componentDidMount() {\n  //   this.callApi()\n  //     .then(res => this.setState({ response: res.express }))\n  //     .catch(err => console.log(err));\n  // }\n  // callApi = async () => {\n  //   const response = await fetch(`https://www.lrt.lt/static/tvprog/tvprog.json`, { mode: 'no-cors' });\n  //   const body = await response.json();\n  //   if (response.status !== 200) throw Error(body.message);\n  //   return body;\n  // };\n\n  componentDidMount() {\n    fetch(\"https://www.lrt.lt/static/tvprog/tvprog.json\", { mode: 'no-cors' })\n    .then(res => res.json())\n    .then(json => {\n      let liveShow = json.tvprog.items[0];\n      let liveShowTitle = liveShow.title;\n      let liveShowDesc = liveShow.desc;\n      let liveShowStart = liveShow.start;\n      let liveShowStop = liveShow.stop;\n      console.log(liveShowTitle);\n      console.log(liveShowDesc);\n      console.log(liveShowStart);\n      console.log(liveShowStop);\n    })\n    .catch(err => {\n      console.error(err);\n    });\n  } \n     \n    \n  \n\n\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <p className=\"text\">\n            Dabar per <img src={logo} alt=\"Logo\" /> rodome:\n          </p>\n          <p>{this.state.response}</p>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}